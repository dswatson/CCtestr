% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus.R
\name{consensus}
\alias{consensus}
\title{Consensus Cluster Algorithm}
\usage{
consensus(dat, max_k = 3, reps = 100, distance = "euclidean",
  cluster_alg = "hclust", hclust_method = "average", p_item = 0.8,
  p_feature = 1, wts_item = NULL, wts_feature = NULL, seed = NULL,
  parallel = TRUE, check = TRUE)
}
\arguments{
\item{dat}{Probe by sample omic data matrix. Data should be filtered and
normalized prior to analysis.}

\item{max_k}{Maximum cluster number to evaluate.}

\item{reps}{Number of subsamples to draw.}

\item{distance}{Distance metric for clustering. Supports all methods
available in \code{\link[stats]{dist}} and \code{\link[vegan]{vegdist}},
as well as those implemented in the \code{bioDist} package.}

\item{cluster_alg}{Clustering algorithm to implement. Currently supports
hierarchical (\code{"hclust"}), \emph{k}-means (\code{"kmeans"}), and
\emph{k}-medoids (\code{"pam"}).}

\item{hclust_method}{Method to use if \code{cluster_alg = "hclust"}. See 
\code{\link[stats]{hclust}}.}

\item{p_item}{Proportion of items to include in each subsample.}

\item{p_feature}{Proportion of features to include in each subsample.}

\item{wts_item}{Optional vector of item weights.}

\item{wts_feature}{Optional vector of feature weights.}

\item{seed}{Optional seed for reproducibility.}

\item{parallel}{If a parallel backend is loaded and available, should the 
function use it? Highly advisable if hardware permits.}

\item{check}{Check for errors in function arguments? This is set to \code{
FALSE} by internal \code{M3C} functions to cut down on redundant checks, 
but should generally be \code{TRUE} when used interactively.}
}
\value{
A list with \code{max_k} elements, the first of which is \code{NULL}.
Elements two through \code{max_k} are consensus matrices corresponding to
cluster numbers \emph{k} = 2 through \code{max_k}.
}
\description{
This function implements the consensus cluster algorithm.
}
\details{
Consensus clustering is a resampling procedure to evaluate cluster stability.
A user-specified proportion of samples are held out on each run of the
algorithm to test how often the remaining samples do or do not cluster
together. The result is a square, symmetric consensus matrix for each value
of cluster numbers \emph{k}. Each cell of the matrix \code{mat[i, j]}
represents the proportion of all runs including samples \code{i} and \code{j}
in which the two were clustered together.
}
\examples{
mat <- matrix(rnorm(1000 * 12), nrow = 1000, ncol = 12)
cc <- consensus(mat, max_k = 4)

}
\references{
Monti, S., Tamayo, P., Mesirov, J., & Golub, T. (2003).
\href{http://link.springer.com/article/10.1023/A:1023949509487}{Consensus
Clustering: A Resampling-Based Method for Class Discovery and Visualization
of Gene Expression Microarray Data}. \emph{Machine Learning}, \emph{52}:
91-118.
}
\seealso{
\code{\link[ConsensusClusterPlus]{ConsensusClusterPlus}},
\code{\link{M3C}}
}
